{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\util-deprecate\\\\browser.js\"],\"names\":[\"config\",\"name\",\"global\",\"localStorage\",\"_\",\"val\",\"String\",\"toLowerCase\",\"module\",\"exports\",\"fn\",\"msg\",\"warned\",\"Error\",\"console\",\"trace\",\"warn\",\"apply\",\"this\",\"arguments\"],\"mappings\":\"8FAwDA,SAAAA,EAAAC,GAEA,IACA,IAAAC,EAAAC,aAAA,OAAA,EACG,MAAAC,GACH,OAAA,EAEA,IAAAC,EAAAH,EAAAC,aAAAF,GACA,OAAA,MAAAI,GACA,SAAAC,OAAAD,GAAAE,cA5DAC,EAAAC,QAoBA,SAAAC,EAAAC,GACA,GAAAX,EAAA,iBACA,OAAAU,EAGA,IAAAE,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAAZ,EAAA,oBACA,MAAA,IAAAa,MAAAF,GACOX,EAAA,oBACPc,EAAAC,MAAAJ,GAEAG,EAAAE,KAAAL,GAEAC,GAAA,EAEA,OAAAF,EAAAO,MAAAC,KAAAC\",\"sourcesContent\":[\"\\r\\n/**\\r\\n * Module exports.\\r\\n */\\r\\n\\r\\nmodule.exports = deprecate;\\r\\n\\r\\n/**\\r\\n * Mark that a method should not be used.\\r\\n * Returns a modified function which warns once by default.\\r\\n *\\r\\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\\r\\n *\\r\\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\\r\\n * will throw an Error when invoked.\\r\\n *\\r\\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\\r\\n * will invoke `console.trace()` instead of `console.error()`.\\r\\n *\\r\\n * @param {Function} fn - the function to deprecate\\r\\n * @param {String} msg - the string to print to the console when `fn` is invoked\\r\\n * @returns {Function} a new \\\"deprecated\\\" version of `fn`\\r\\n * @api public\\r\\n */\\r\\n\\r\\nfunction deprecate (fn, msg) {\\r\\n  if (config('noDeprecation')) {\\r\\n    return fn;\\r\\n  }\\r\\n\\r\\n  var warned = false;\\r\\n  function deprecated() {\\r\\n    if (!warned) {\\r\\n      if (config('throwDeprecation')) {\\r\\n        throw new Error(msg);\\r\\n      } else if (config('traceDeprecation')) {\\r\\n        console.trace(msg);\\r\\n      } else {\\r\\n        console.warn(msg);\\r\\n      }\\r\\n      warned = true;\\r\\n    }\\r\\n    return fn.apply(this, arguments);\\r\\n  }\\r\\n\\r\\n  return deprecated;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Checks `localStorage` for boolean values for the given `name`.\\r\\n *\\r\\n * @param {String} name\\r\\n * @returns {Boolean}\\r\\n * @api private\\r\\n */\\r\\n\\r\\nfunction config (name) {\\r\\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\\r\\n  try {\\r\\n    if (!global.localStorage) return false;\\r\\n  } catch (_) {\\r\\n    return false;\\r\\n  }\\r\\n  var val = global.localStorage[name];\\r\\n  if (null == val) return false;\\r\\n  return String(val).toLowerCase() === 'true';\\r\\n}\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{t9FE:function(r,t,n){(function(t,n){function e(r){try{if(!n.localStorage)return!1}catch(r){return!1}var t=n.localStorage[r];return null!=t&&\"true\"===String(t).toLowerCase()}r.exports=function(r,n){if(e(\"noDeprecation\"))return r;var o=!1;return function(){if(!o){if(e(\"throwDeprecation\"))throw new Error(n);e(\"traceDeprecation\")?t.trace(n):t.warn(n),o=!0}return r.apply(this,arguments)}}}).call(this,n(\"ziTh\"),n(\"yLpj\"))}}]);","extractedComments":[]}