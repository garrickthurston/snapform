{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\browser.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\ecb.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\streamCipher.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\cfb.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\aes.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\ghash.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\decrypter.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\ofb.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\cfb1.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\cfb8.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\ctr.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\authCipher.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\encrypter.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\index.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\incr32.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-aes\\\\modes\\\\cbc.js\"],\"names\":[\"ciphers\",\"__webpack_require__\",\"deciphers\",\"modes\",\"exports\",\"createCipher\",\"Cipher\",\"createCipheriv\",\"Cipheriv\",\"createDecipher\",\"Decipher\",\"createDecipheriv\",\"Decipheriv\",\"listCiphers\",\"getCiphers\",\"Object\",\"keys\",\"encrypt\",\"self\",\"block\",\"_cipher\",\"encryptBlock\",\"decrypt\",\"decryptBlock\",\"aes\",\"Buffer\",\"Transform\",\"StreamCipher\",\"mode\",\"key\",\"iv\",\"call\",\"this\",\"AES\",\"_prev\",\"from\",\"_cache\",\"allocUnsafe\",\"_secCache\",\"_decrypt\",\"_mode\",\"inherits\",\"prototype\",\"_update\",\"chunk\",\"_final\",\"scrub\",\"module\",\"xor\",\"encryptStart\",\"data\",\"len\",\"length\",\"out\",\"slice\",\"concat\",\"asUInt32Array\",\"buf\",\"isBuffer\",\"Array\",\"i\",\"readUInt32BE\",\"scrubVec\",\"v\",\"cryptBlock\",\"M\",\"keySchedule\",\"SUB_MIX\",\"SBOX\",\"nRounds\",\"t0\",\"t1\",\"t2\",\"t3\",\"SUB_MIX0\",\"SUB_MIX1\",\"SUB_MIX2\",\"SUB_MIX3\",\"s0\",\"s1\",\"s2\",\"s3\",\"ksRow\",\"round\",\"RCON\",\"G\",\"d\",\"j\",\"INV_SBOX\",\"INV_SUB_MIX\",\"x\",\"xi\",\"sx\",\"x2\",\"x4\",\"x8\",\"t\",\"_key\",\"_reset\",\"blockSize\",\"keySize\",\"keyWords\",\"ksRows\",\"k\",\"invKeySchedule\",\"ik\",\"ksR\",\"tt\",\"_nRounds\",\"_keySchedule\",\"_invKeySchedule\",\"encryptBlockRaw\",\"writeUInt32BE\",\"m1\",\"ZEROES\",\"alloc\",\"fromArray\",\"GHASH\",\"h\",\"state\",\"cache\",\"ghash\",\"_multiply\",\"lsbVi\",\"Vi\",\"Zi\",\"update\",\"final\",\"abl\",\"bl\",\"AuthCipher\",\"MODES\",\"ebtk\",\"Splitter\",\"_last\",\"_autopadding\",\"suite\",\"password\",\"config\",\"toLowerCase\",\"TypeError\",\"type\",\"thing\",\"add\",\"get\",\"push\",\"flush\",\"last\",\"padded\",\"Error\",\"unpad\",\"setAutoPadding\",\"setTo\",\"autoPadding\",\"getBlock\",\"pad\",\"encryptByte\",\"byteParam\",\"bit\",\"value\",\"shiftIn\",\"buffer\",\"incr32\",\"chunkNum\",\"Math\",\"ceil\",\"start\",\"offset\",\"ck\",\"_ghash\",\"_finID\",\"toPad\",\"ivBits\",\"tail\",\"writeUIntBE\",\"calcIv\",\"_alen\",\"_len\",\"_authTag\",\"_called\",\"rump\",\"tag\",\"a\",\"b\",\"min\",\"xorTest\",\"getAuthTag\",\"setAuthTag\",\"setAAD\",\"PADDING\",\"equals\",\"padBuff\",\"writeUInt8\",\"modeModules\",\"ECB\",\"CBC\",\"CFB\",\"CFB8\",\"CFB1\",\"OFB\",\"CTR\",\"GCM\",\"item\",\"readUInt8\"],\"mappings\":\"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\",\"sourcesContent\":[\"var ciphers = require('./encrypter')\\nvar deciphers = require('./decrypter')\\nvar modes = require('./modes/list.json')\\n\\nfunction getCiphers () {\\n  return Object.keys(modes)\\n}\\n\\nexports.createCipher = exports.Cipher = ciphers.createCipher\\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\\nexports.listCiphers = exports.getCiphers = getCiphers\\n\",\"exports.encrypt = function (self, block) {\\n  return self._cipher.encryptBlock(block)\\n}\\n\\nexports.decrypt = function (self, block) {\\n  return self._cipher.decryptBlock(block)\\n}\\n\",\"var aes = require('./aes')\\nvar Buffer = require('safe-buffer').Buffer\\nvar Transform = require('cipher-base')\\nvar inherits = require('inherits')\\n\\nfunction StreamCipher (mode, key, iv, decrypt) {\\n  Transform.call(this)\\n\\n  this._cipher = new aes.AES(key)\\n  this._prev = Buffer.from(iv)\\n  this._cache = Buffer.allocUnsafe(0)\\n  this._secCache = Buffer.allocUnsafe(0)\\n  this._decrypt = decrypt\\n  this._mode = mode\\n}\\n\\ninherits(StreamCipher, Transform)\\n\\nStreamCipher.prototype._update = function (chunk) {\\n  return this._mode.encrypt(this, chunk, this._decrypt)\\n}\\n\\nStreamCipher.prototype._final = function () {\\n  this._cipher.scrub()\\n}\\n\\nmodule.exports = StreamCipher\\n\",\"var Buffer = require('safe-buffer').Buffer\\nvar xor = require('buffer-xor')\\n\\nfunction encryptStart (self, data, decrypt) {\\n  var len = data.length\\n  var out = xor(data, self._cache)\\n  self._cache = self._cache.slice(len)\\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\\n  return out\\n}\\n\\nexports.encrypt = function (self, data, decrypt) {\\n  var out = Buffer.allocUnsafe(0)\\n  var len\\n\\n  while (data.length) {\\n    if (self._cache.length === 0) {\\n      self._cache = self._cipher.encryptBlock(self._prev)\\n      self._prev = Buffer.allocUnsafe(0)\\n    }\\n\\n    if (self._cache.length <= data.length) {\\n      len = self._cache.length\\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\\n      data = data.slice(len)\\n    } else {\\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\\n      break\\n    }\\n  }\\n\\n  return out\\n}\\n\",\"// based on the aes implimentation in triple sec\\n// https://github.com/keybase/triplesec\\n// which is in turn based on the one from crypto-js\\n// https://code.google.com/p/crypto-js/\\n\\nvar Buffer = require('safe-buffer').Buffer\\n\\nfunction asUInt32Array (buf) {\\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\\n\\n  var len = (buf.length / 4) | 0\\n  var out = new Array(len)\\n\\n  for (var i = 0; i < len; i++) {\\n    out[i] = buf.readUInt32BE(i * 4)\\n  }\\n\\n  return out\\n}\\n\\nfunction scrubVec (v) {\\n  for (var i = 0; i < v.length; v++) {\\n    v[i] = 0\\n  }\\n}\\n\\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\\n  var SUB_MIX0 = SUB_MIX[0]\\n  var SUB_MIX1 = SUB_MIX[1]\\n  var SUB_MIX2 = SUB_MIX[2]\\n  var SUB_MIX3 = SUB_MIX[3]\\n\\n  var s0 = M[0] ^ keySchedule[0]\\n  var s1 = M[1] ^ keySchedule[1]\\n  var s2 = M[2] ^ keySchedule[2]\\n  var s3 = M[3] ^ keySchedule[3]\\n  var t0, t1, t2, t3\\n  var ksRow = 4\\n\\n  for (var round = 1; round < nRounds; round++) {\\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\\n    s0 = t0\\n    s1 = t1\\n    s2 = t2\\n    s3 = t3\\n  }\\n\\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\\n  t0 = t0 >>> 0\\n  t1 = t1 >>> 0\\n  t2 = t2 >>> 0\\n  t3 = t3 >>> 0\\n\\n  return [t0, t1, t2, t3]\\n}\\n\\n// AES constants\\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\\nvar G = (function () {\\n  // Compute double table\\n  var d = new Array(256)\\n  for (var j = 0; j < 256; j++) {\\n    if (j < 128) {\\n      d[j] = j << 1\\n    } else {\\n      d[j] = (j << 1) ^ 0x11b\\n    }\\n  }\\n\\n  var SBOX = []\\n  var INV_SBOX = []\\n  var SUB_MIX = [[], [], [], []]\\n  var INV_SUB_MIX = [[], [], [], []]\\n\\n  // Walk GF(2^8)\\n  var x = 0\\n  var xi = 0\\n  for (var i = 0; i < 256; ++i) {\\n    // Compute sbox\\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\\n    SBOX[x] = sx\\n    INV_SBOX[sx] = x\\n\\n    // Compute multiplication\\n    var x2 = d[x]\\n    var x4 = d[x2]\\n    var x8 = d[x4]\\n\\n    // Compute sub bytes, mix columns tables\\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\\n    SUB_MIX[3][x] = t\\n\\n    // Compute inv sub bytes, inv mix columns tables\\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\\n    INV_SUB_MIX[3][sx] = t\\n\\n    if (x === 0) {\\n      x = xi = 1\\n    } else {\\n      x = x2 ^ d[d[d[x8 ^ x2]]]\\n      xi ^= d[d[xi]]\\n    }\\n  }\\n\\n  return {\\n    SBOX: SBOX,\\n    INV_SBOX: INV_SBOX,\\n    SUB_MIX: SUB_MIX,\\n    INV_SUB_MIX: INV_SUB_MIX\\n  }\\n})()\\n\\nfunction AES (key) {\\n  this._key = asUInt32Array(key)\\n  this._reset()\\n}\\n\\nAES.blockSize = 4 * 4\\nAES.keySize = 256 / 8\\nAES.prototype.blockSize = AES.blockSize\\nAES.prototype.keySize = AES.keySize\\nAES.prototype._reset = function () {\\n  var keyWords = this._key\\n  var keySize = keyWords.length\\n  var nRounds = keySize + 6\\n  var ksRows = (nRounds + 1) * 4\\n\\n  var keySchedule = []\\n  for (var k = 0; k < keySize; k++) {\\n    keySchedule[k] = keyWords[k]\\n  }\\n\\n  for (k = keySize; k < ksRows; k++) {\\n    var t = keySchedule[k - 1]\\n\\n    if (k % keySize === 0) {\\n      t = (t << 8) | (t >>> 24)\\n      t =\\n        (G.SBOX[t >>> 24] << 24) |\\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\\n        (G.SBOX[t & 0xff])\\n\\n      t ^= RCON[(k / keySize) | 0] << 24\\n    } else if (keySize > 6 && k % keySize === 4) {\\n      t =\\n        (G.SBOX[t >>> 24] << 24) |\\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\\n        (G.SBOX[t & 0xff])\\n    }\\n\\n    keySchedule[k] = keySchedule[k - keySize] ^ t\\n  }\\n\\n  var invKeySchedule = []\\n  for (var ik = 0; ik < ksRows; ik++) {\\n    var ksR = ksRows - ik\\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\\n\\n    if (ik < 4 || ksR <= 4) {\\n      invKeySchedule[ik] = tt\\n    } else {\\n      invKeySchedule[ik] =\\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\\n    }\\n  }\\n\\n  this._nRounds = nRounds\\n  this._keySchedule = keySchedule\\n  this._invKeySchedule = invKeySchedule\\n}\\n\\nAES.prototype.encryptBlockRaw = function (M) {\\n  M = asUInt32Array(M)\\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\\n}\\n\\nAES.prototype.encryptBlock = function (M) {\\n  var out = this.encryptBlockRaw(M)\\n  var buf = Buffer.allocUnsafe(16)\\n  buf.writeUInt32BE(out[0], 0)\\n  buf.writeUInt32BE(out[1], 4)\\n  buf.writeUInt32BE(out[2], 8)\\n  buf.writeUInt32BE(out[3], 12)\\n  return buf\\n}\\n\\nAES.prototype.decryptBlock = function (M) {\\n  M = asUInt32Array(M)\\n\\n  // swap\\n  var m1 = M[1]\\n  M[1] = M[3]\\n  M[3] = m1\\n\\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\\n  var buf = Buffer.allocUnsafe(16)\\n  buf.writeUInt32BE(out[0], 0)\\n  buf.writeUInt32BE(out[3], 4)\\n  buf.writeUInt32BE(out[2], 8)\\n  buf.writeUInt32BE(out[1], 12)\\n  return buf\\n}\\n\\nAES.prototype.scrub = function () {\\n  scrubVec(this._keySchedule)\\n  scrubVec(this._invKeySchedule)\\n  scrubVec(this._key)\\n}\\n\\nmodule.exports.AES = AES\\n\",\"var Buffer = require('safe-buffer').Buffer\\nvar ZEROES = Buffer.alloc(16, 0)\\n\\nfunction toArray (buf) {\\n  return [\\n    buf.readUInt32BE(0),\\n    buf.readUInt32BE(4),\\n    buf.readUInt32BE(8),\\n    buf.readUInt32BE(12)\\n  ]\\n}\\n\\nfunction fromArray (out) {\\n  var buf = Buffer.allocUnsafe(16)\\n  buf.writeUInt32BE(out[0] >>> 0, 0)\\n  buf.writeUInt32BE(out[1] >>> 0, 4)\\n  buf.writeUInt32BE(out[2] >>> 0, 8)\\n  buf.writeUInt32BE(out[3] >>> 0, 12)\\n  return buf\\n}\\n\\nfunction GHASH (key) {\\n  this.h = key\\n  this.state = Buffer.alloc(16, 0)\\n  this.cache = Buffer.allocUnsafe(0)\\n}\\n\\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\\n// by Juho Vähä-Herttua\\nGHASH.prototype.ghash = function (block) {\\n  var i = -1\\n  while (++i < block.length) {\\n    this.state[i] ^= block[i]\\n  }\\n  this._multiply()\\n}\\n\\nGHASH.prototype._multiply = function () {\\n  var Vi = toArray(this.h)\\n  var Zi = [0, 0, 0, 0]\\n  var j, xi, lsbVi\\n  var i = -1\\n  while (++i < 128) {\\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\\n    if (xi) {\\n      // Z_i+1 = Z_i ^ V_i\\n      Zi[0] ^= Vi[0]\\n      Zi[1] ^= Vi[1]\\n      Zi[2] ^= Vi[2]\\n      Zi[3] ^= Vi[3]\\n    }\\n\\n    // Store the value of LSB(V_i)\\n    lsbVi = (Vi[3] & 1) !== 0\\n\\n    // V_i+1 = V_i >> 1\\n    for (j = 3; j > 0; j--) {\\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\\n    }\\n    Vi[0] = Vi[0] >>> 1\\n\\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\\n    if (lsbVi) {\\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\\n    }\\n  }\\n  this.state = fromArray(Zi)\\n}\\n\\nGHASH.prototype.update = function (buf) {\\n  this.cache = Buffer.concat([this.cache, buf])\\n  var chunk\\n  while (this.cache.length >= 16) {\\n    chunk = this.cache.slice(0, 16)\\n    this.cache = this.cache.slice(16)\\n    this.ghash(chunk)\\n  }\\n}\\n\\nGHASH.prototype.final = function (abl, bl) {\\n  if (this.cache.length) {\\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\\n  }\\n\\n  this.ghash(fromArray([0, abl, 0, bl]))\\n  return this.state\\n}\\n\\nmodule.exports = GHASH\\n\",\"var AuthCipher = require('./authCipher')\\nvar Buffer = require('safe-buffer').Buffer\\nvar MODES = require('./modes')\\nvar StreamCipher = require('./streamCipher')\\nvar Transform = require('cipher-base')\\nvar aes = require('./aes')\\nvar ebtk = require('evp_bytestokey')\\nvar inherits = require('inherits')\\n\\nfunction Decipher (mode, key, iv) {\\n  Transform.call(this)\\n\\n  this._cache = new Splitter()\\n  this._last = void 0\\n  this._cipher = new aes.AES(key)\\n  this._prev = Buffer.from(iv)\\n  this._mode = mode\\n  this._autopadding = true\\n}\\n\\ninherits(Decipher, Transform)\\n\\nDecipher.prototype._update = function (data) {\\n  this._cache.add(data)\\n  var chunk\\n  var thing\\n  var out = []\\n  while ((chunk = this._cache.get(this._autopadding))) {\\n    thing = this._mode.decrypt(this, chunk)\\n    out.push(thing)\\n  }\\n  return Buffer.concat(out)\\n}\\n\\nDecipher.prototype._final = function () {\\n  var chunk = this._cache.flush()\\n  if (this._autopadding) {\\n    return unpad(this._mode.decrypt(this, chunk))\\n  } else if (chunk) {\\n    throw new Error('data not multiple of block length')\\n  }\\n}\\n\\nDecipher.prototype.setAutoPadding = function (setTo) {\\n  this._autopadding = !!setTo\\n  return this\\n}\\n\\nfunction Splitter () {\\n  this.cache = Buffer.allocUnsafe(0)\\n}\\n\\nSplitter.prototype.add = function (data) {\\n  this.cache = Buffer.concat([this.cache, data])\\n}\\n\\nSplitter.prototype.get = function (autoPadding) {\\n  var out\\n  if (autoPadding) {\\n    if (this.cache.length > 16) {\\n      out = this.cache.slice(0, 16)\\n      this.cache = this.cache.slice(16)\\n      return out\\n    }\\n  } else {\\n    if (this.cache.length >= 16) {\\n      out = this.cache.slice(0, 16)\\n      this.cache = this.cache.slice(16)\\n      return out\\n    }\\n  }\\n\\n  return null\\n}\\n\\nSplitter.prototype.flush = function () {\\n  if (this.cache.length) return this.cache\\n}\\n\\nfunction unpad (last) {\\n  var padded = last[15]\\n  if (padded < 1 || padded > 16) {\\n    throw new Error('unable to decrypt data')\\n  }\\n  var i = -1\\n  while (++i < padded) {\\n    if (last[(i + (16 - padded))] !== padded) {\\n      throw new Error('unable to decrypt data')\\n    }\\n  }\\n  if (padded === 16) return\\n\\n  return last.slice(0, 16 - padded)\\n}\\n\\nfunction createDecipheriv (suite, password, iv) {\\n  var config = MODES[suite.toLowerCase()]\\n  if (!config) throw new TypeError('invalid suite type')\\n\\n  if (typeof iv === 'string') iv = Buffer.from(iv)\\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\\n\\n  if (typeof password === 'string') password = Buffer.from(password)\\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\\n\\n  if (config.type === 'stream') {\\n    return new StreamCipher(config.module, password, iv, true)\\n  } else if (config.type === 'auth') {\\n    return new AuthCipher(config.module, password, iv, true)\\n  }\\n\\n  return new Decipher(config.module, password, iv)\\n}\\n\\nfunction createDecipher (suite, password) {\\n  var config = MODES[suite.toLowerCase()]\\n  if (!config) throw new TypeError('invalid suite type')\\n\\n  var keys = ebtk(password, false, config.key, config.iv)\\n  return createDecipheriv(suite, keys.key, keys.iv)\\n}\\n\\nexports.createDecipher = createDecipher\\nexports.createDecipheriv = createDecipheriv\\n\",\"var xor = require('buffer-xor')\\n\\nfunction getBlock (self) {\\n  self._prev = self._cipher.encryptBlock(self._prev)\\n  return self._prev\\n}\\n\\nexports.encrypt = function (self, chunk) {\\n  while (self._cache.length < chunk.length) {\\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\\n  }\\n\\n  var pad = self._cache.slice(0, chunk.length)\\n  self._cache = self._cache.slice(chunk.length)\\n  return xor(chunk, pad)\\n}\\n\",\"var Buffer = require('safe-buffer').Buffer\\n\\nfunction encryptByte (self, byteParam, decrypt) {\\n  var pad\\n  var i = -1\\n  var len = 8\\n  var out = 0\\n  var bit, value\\n  while (++i < len) {\\n    pad = self._cipher.encryptBlock(self._prev)\\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\\n    value = pad[0] ^ bit\\n    out += ((value & 0x80) >> (i % 8))\\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\\n  }\\n  return out\\n}\\n\\nfunction shiftIn (buffer, value) {\\n  var len = buffer.length\\n  var i = -1\\n  var out = Buffer.allocUnsafe(buffer.length)\\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\\n\\n  while (++i < len) {\\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\\n  }\\n\\n  return out\\n}\\n\\nexports.encrypt = function (self, chunk, decrypt) {\\n  var len = chunk.length\\n  var out = Buffer.allocUnsafe(len)\\n  var i = -1\\n\\n  while (++i < len) {\\n    out[i] = encryptByte(self, chunk[i], decrypt)\\n  }\\n\\n  return out\\n}\\n\",\"var Buffer = require('safe-buffer').Buffer\\n\\nfunction encryptByte (self, byteParam, decrypt) {\\n  var pad = self._cipher.encryptBlock(self._prev)\\n  var out = pad[0] ^ byteParam\\n\\n  self._prev = Buffer.concat([\\n    self._prev.slice(1),\\n    Buffer.from([decrypt ? byteParam : out])\\n  ])\\n\\n  return out\\n}\\n\\nexports.encrypt = function (self, chunk, decrypt) {\\n  var len = chunk.length\\n  var out = Buffer.allocUnsafe(len)\\n  var i = -1\\n\\n  while (++i < len) {\\n    out[i] = encryptByte(self, chunk[i], decrypt)\\n  }\\n\\n  return out\\n}\\n\",\"var xor = require('buffer-xor')\\nvar Buffer = require('safe-buffer').Buffer\\nvar incr32 = require('../incr32')\\n\\nfunction getBlock (self) {\\n  var out = self._cipher.encryptBlockRaw(self._prev)\\n  incr32(self._prev)\\n  return out\\n}\\n\\nvar blockSize = 16\\nexports.encrypt = function (self, chunk) {\\n  var chunkNum = Math.ceil(chunk.length / blockSize)\\n  var start = self._cache.length\\n  self._cache = Buffer.concat([\\n    self._cache,\\n    Buffer.allocUnsafe(chunkNum * blockSize)\\n  ])\\n  for (var i = 0; i < chunkNum; i++) {\\n    var out = getBlock(self)\\n    var offset = start + i * blockSize\\n    self._cache.writeUInt32BE(out[0], offset + 0)\\n    self._cache.writeUInt32BE(out[1], offset + 4)\\n    self._cache.writeUInt32BE(out[2], offset + 8)\\n    self._cache.writeUInt32BE(out[3], offset + 12)\\n  }\\n  var pad = self._cache.slice(0, chunk.length)\\n  self._cache = self._cache.slice(chunk.length)\\n  return xor(chunk, pad)\\n}\\n\",\"var aes = require('./aes')\\nvar Buffer = require('safe-buffer').Buffer\\nvar Transform = require('cipher-base')\\nvar inherits = require('inherits')\\nvar GHASH = require('./ghash')\\nvar xor = require('buffer-xor')\\nvar incr32 = require('./incr32')\\n\\nfunction xorTest (a, b) {\\n  var out = 0\\n  if (a.length !== b.length) out++\\n\\n  var len = Math.min(a.length, b.length)\\n  for (var i = 0; i < len; ++i) {\\n    out += (a[i] ^ b[i])\\n  }\\n\\n  return out\\n}\\n\\nfunction calcIv (self, iv, ck) {\\n  if (iv.length === 12) {\\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\\n  }\\n  var ghash = new GHASH(ck)\\n  var len = iv.length\\n  var toPad = len % 16\\n  ghash.update(iv)\\n  if (toPad) {\\n    toPad = 16 - toPad\\n    ghash.update(Buffer.alloc(toPad, 0))\\n  }\\n  ghash.update(Buffer.alloc(8, 0))\\n  var ivBits = len * 8\\n  var tail = Buffer.alloc(8)\\n  tail.writeUIntBE(ivBits, 0, 8)\\n  ghash.update(tail)\\n  self._finID = ghash.state\\n  var out = Buffer.from(self._finID)\\n  incr32(out)\\n  return out\\n}\\nfunction StreamCipher (mode, key, iv, decrypt) {\\n  Transform.call(this)\\n\\n  var h = Buffer.alloc(4, 0)\\n\\n  this._cipher = new aes.AES(key)\\n  var ck = this._cipher.encryptBlock(h)\\n  this._ghash = new GHASH(ck)\\n  iv = calcIv(this, iv, ck)\\n\\n  this._prev = Buffer.from(iv)\\n  this._cache = Buffer.allocUnsafe(0)\\n  this._secCache = Buffer.allocUnsafe(0)\\n  this._decrypt = decrypt\\n  this._alen = 0\\n  this._len = 0\\n  this._mode = mode\\n\\n  this._authTag = null\\n  this._called = false\\n}\\n\\ninherits(StreamCipher, Transform)\\n\\nStreamCipher.prototype._update = function (chunk) {\\n  if (!this._called && this._alen) {\\n    var rump = 16 - (this._alen % 16)\\n    if (rump < 16) {\\n      rump = Buffer.alloc(rump, 0)\\n      this._ghash.update(rump)\\n    }\\n  }\\n\\n  this._called = true\\n  var out = this._mode.encrypt(this, chunk)\\n  if (this._decrypt) {\\n    this._ghash.update(chunk)\\n  } else {\\n    this._ghash.update(out)\\n  }\\n  this._len += chunk.length\\n  return out\\n}\\n\\nStreamCipher.prototype._final = function () {\\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\\n\\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\\n\\n  this._authTag = tag\\n  this._cipher.scrub()\\n}\\n\\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\\n\\n  return this._authTag\\n}\\n\\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\\n\\n  this._authTag = tag\\n}\\n\\nStreamCipher.prototype.setAAD = function setAAD (buf) {\\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\\n\\n  this._ghash.update(buf)\\n  this._alen += buf.length\\n}\\n\\nmodule.exports = StreamCipher\\n\",\"var MODES = require('./modes')\\nvar AuthCipher = require('./authCipher')\\nvar Buffer = require('safe-buffer').Buffer\\nvar StreamCipher = require('./streamCipher')\\nvar Transform = require('cipher-base')\\nvar aes = require('./aes')\\nvar ebtk = require('evp_bytestokey')\\nvar inherits = require('inherits')\\n\\nfunction Cipher (mode, key, iv) {\\n  Transform.call(this)\\n\\n  this._cache = new Splitter()\\n  this._cipher = new aes.AES(key)\\n  this._prev = Buffer.from(iv)\\n  this._mode = mode\\n  this._autopadding = true\\n}\\n\\ninherits(Cipher, Transform)\\n\\nCipher.prototype._update = function (data) {\\n  this._cache.add(data)\\n  var chunk\\n  var thing\\n  var out = []\\n\\n  while ((chunk = this._cache.get())) {\\n    thing = this._mode.encrypt(this, chunk)\\n    out.push(thing)\\n  }\\n\\n  return Buffer.concat(out)\\n}\\n\\nvar PADDING = Buffer.alloc(16, 0x10)\\n\\nCipher.prototype._final = function () {\\n  var chunk = this._cache.flush()\\n  if (this._autopadding) {\\n    chunk = this._mode.encrypt(this, chunk)\\n    this._cipher.scrub()\\n    return chunk\\n  }\\n\\n  if (!chunk.equals(PADDING)) {\\n    this._cipher.scrub()\\n    throw new Error('data not multiple of block length')\\n  }\\n}\\n\\nCipher.prototype.setAutoPadding = function (setTo) {\\n  this._autopadding = !!setTo\\n  return this\\n}\\n\\nfunction Splitter () {\\n  this.cache = Buffer.allocUnsafe(0)\\n}\\n\\nSplitter.prototype.add = function (data) {\\n  this.cache = Buffer.concat([this.cache, data])\\n}\\n\\nSplitter.prototype.get = function () {\\n  if (this.cache.length > 15) {\\n    var out = this.cache.slice(0, 16)\\n    this.cache = this.cache.slice(16)\\n    return out\\n  }\\n  return null\\n}\\n\\nSplitter.prototype.flush = function () {\\n  var len = 16 - this.cache.length\\n  var padBuff = Buffer.allocUnsafe(len)\\n\\n  var i = -1\\n  while (++i < len) {\\n    padBuff.writeUInt8(len, i)\\n  }\\n\\n  return Buffer.concat([this.cache, padBuff])\\n}\\n\\nfunction createCipheriv (suite, password, iv) {\\n  var config = MODES[suite.toLowerCase()]\\n  if (!config) throw new TypeError('invalid suite type')\\n\\n  if (typeof password === 'string') password = Buffer.from(password)\\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\\n\\n  if (typeof iv === 'string') iv = Buffer.from(iv)\\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\\n\\n  if (config.type === 'stream') {\\n    return new StreamCipher(config.module, password, iv)\\n  } else if (config.type === 'auth') {\\n    return new AuthCipher(config.module, password, iv)\\n  }\\n\\n  return new Cipher(config.module, password, iv)\\n}\\n\\nfunction createCipher (suite, password) {\\n  var config = MODES[suite.toLowerCase()]\\n  if (!config) throw new TypeError('invalid suite type')\\n\\n  var keys = ebtk(password, false, config.key, config.iv)\\n  return createCipheriv(suite, keys.key, keys.iv)\\n}\\n\\nexports.createCipheriv = createCipheriv\\nexports.createCipher = createCipher\\n\",\"var modeModules = {\\n  ECB: require('./ecb'),\\n  CBC: require('./cbc'),\\n  CFB: require('./cfb'),\\n  CFB8: require('./cfb8'),\\n  CFB1: require('./cfb1'),\\n  OFB: require('./ofb'),\\n  CTR: require('./ctr'),\\n  GCM: require('./ctr')\\n}\\n\\nvar modes = require('./list.json')\\n\\nfor (var key in modes) {\\n  modes[key].module = modeModules[modes[key].mode]\\n}\\n\\nmodule.exports = modes\\n\",\"function incr32 (iv) {\\n  var len = iv.length\\n  var item\\n  while (len--) {\\n    item = iv.readUInt8(len)\\n    if (item === 255) {\\n      iv.writeUInt8(0, len)\\n    } else {\\n      item++\\n      iv.writeUInt8(item, len)\\n      break\\n    }\\n  }\\n}\\nmodule.exports = incr32\\n\",\"var xor = require('buffer-xor')\\n\\nexports.encrypt = function (self, block) {\\n  var data = xor(block, self._prev)\\n\\n  self._prev = self._cipher.encryptBlock(data)\\n  return self._prev\\n}\\n\\nexports.decrypt = function (self, block) {\\n  var pad = self._prev\\n\\n  self._prev = block\\n  var out = self._cipher.decryptBlock(block)\\n\\n  return xor(out, pad)\\n}\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{\"/ab2\":function(e,t,r){var i=r(\"iUdu\"),c=r(\"QihY\"),n=r(\"6F8h\");t.createCipher=t.Cipher=i.createCipher,t.createCipheriv=t.Cipheriv=i.createCipheriv,t.createDecipher=t.Decipher=c.createDecipher,t.createDecipheriv=t.Decipheriv=c.createDecipheriv,t.listCiphers=t.getCiphers=function(){return Object.keys(n)}},\"6F8h\":function(e){e.exports={\"aes-128-ecb\":{cipher:\"AES\",key:128,iv:0,mode:\"ECB\",type:\"block\"},\"aes-192-ecb\":{cipher:\"AES\",key:192,iv:0,mode:\"ECB\",type:\"block\"},\"aes-256-ecb\":{cipher:\"AES\",key:256,iv:0,mode:\"ECB\",type:\"block\"},\"aes-128-cbc\":{cipher:\"AES\",key:128,iv:16,mode:\"CBC\",type:\"block\"},\"aes-192-cbc\":{cipher:\"AES\",key:192,iv:16,mode:\"CBC\",type:\"block\"},\"aes-256-cbc\":{cipher:\"AES\",key:256,iv:16,mode:\"CBC\",type:\"block\"},aes128:{cipher:\"AES\",key:128,iv:16,mode:\"CBC\",type:\"block\"},aes192:{cipher:\"AES\",key:192,iv:16,mode:\"CBC\",type:\"block\"},aes256:{cipher:\"AES\",key:256,iv:16,mode:\"CBC\",type:\"block\"},\"aes-128-cfb\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-192-cfb\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-256-cfb\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB\",type:\"stream\"},\"aes-128-cfb8\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-192-cfb8\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-256-cfb8\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB8\",type:\"stream\"},\"aes-128-cfb1\":{cipher:\"AES\",key:128,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-192-cfb1\":{cipher:\"AES\",key:192,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-256-cfb1\":{cipher:\"AES\",key:256,iv:16,mode:\"CFB1\",type:\"stream\"},\"aes-128-ofb\":{cipher:\"AES\",key:128,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-192-ofb\":{cipher:\"AES\",key:192,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-256-ofb\":{cipher:\"AES\",key:256,iv:16,mode:\"OFB\",type:\"stream\"},\"aes-128-ctr\":{cipher:\"AES\",key:128,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-192-ctr\":{cipher:\"AES\",key:192,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-256-ctr\":{cipher:\"AES\",key:256,iv:16,mode:\"CTR\",type:\"stream\"},\"aes-128-gcm\":{cipher:\"AES\",key:128,iv:12,mode:\"GCM\",type:\"auth\"},\"aes-192-gcm\":{cipher:\"AES\",key:192,iv:12,mode:\"GCM\",type:\"auth\"},\"aes-256-gcm\":{cipher:\"AES\",key:256,iv:12,mode:\"GCM\",type:\"auth\"}}},AUX7:function(e,t){t.encrypt=function(e,t){return e._cipher.encryptBlock(t)},t.decrypt=function(e,t){return e._cipher.decryptBlock(t)}},CfXC:function(e,t,r){var i=r(\"OfWw\"),c=r(\"hwdV\").Buffer,n=r(\"ZDAU\");function h(e,t,r,h){n.call(this),this._cipher=new i.AES(t),this._prev=c.from(r),this._cache=c.allocUnsafe(0),this._secCache=c.allocUnsafe(0),this._decrypt=h,this._mode=e}r(\"P7XM\")(h,n),h.prototype._update=function(e){return this._mode.encrypt(this,e,this._decrypt)},h.prototype._final=function(){this._cipher.scrub()},e.exports=h},NQVK:function(e,t,r){var i=r(\"hwdV\").Buffer,c=r(\"jIre\");function n(e,t,r){var n=t.length,h=c(t,e._cache);return e._cache=e._cache.slice(n),e._prev=i.concat([e._prev,r?t:h]),h}t.encrypt=function(e,t,r){for(var c,h=i.allocUnsafe(0);t.length;){if(0===e._cache.length&&(e._cache=e._cipher.encryptBlock(e._prev),e._prev=i.allocUnsafe(0)),!(e._cache.length<=t.length)){h=i.concat([h,n(e,t,r)]);break}c=e._cache.length,h=i.concat([h,n(e,t.slice(0,c),r)]),t=t.slice(c)}return h}},OfWw:function(e,t,r){var i=r(\"hwdV\").Buffer;function c(e){i.isBuffer(e)||(e=i.from(e));for(var t=e.length/4|0,r=new Array(t),c=0;c<t;c++)r[c]=e.readUInt32BE(4*c);return r}function n(e){for(;0<e.length;e++)e[0]=0}function h(e,t,r,i,c){for(var n,h,a,o,s=r[0],p=r[1],u=r[2],f=r[3],l=e[0]^t[0],_=e[1]^t[1],y=e[2]^t[2],v=e[3]^t[3],d=4,g=1;g<c;g++)n=s[l>>>24]^p[_>>>16&255]^u[y>>>8&255]^f[255&v]^t[d++],h=s[_>>>24]^p[y>>>16&255]^u[v>>>8&255]^f[255&l]^t[d++],a=s[y>>>24]^p[v>>>16&255]^u[l>>>8&255]^f[255&_]^t[d++],o=s[v>>>24]^p[l>>>16&255]^u[_>>>8&255]^f[255&y]^t[d++],l=n,_=h,y=a,v=o;return n=(i[l>>>24]<<24|i[_>>>16&255]<<16|i[y>>>8&255]<<8|i[255&v])^t[d++],h=(i[_>>>24]<<24|i[y>>>16&255]<<16|i[v>>>8&255]<<8|i[255&l])^t[d++],a=(i[y>>>24]<<24|i[v>>>16&255]<<16|i[l>>>8&255]<<8|i[255&_])^t[d++],o=(i[v>>>24]<<24|i[l>>>16&255]<<16|i[_>>>8&255]<<8|i[255&y])^t[d++],[n>>>=0,h>>>=0,a>>>=0,o>>>=0]}var a=[0,1,2,4,8,16,32,64,128,27,54],o=function(){for(var e=new Array(256),t=0;t<256;t++)e[t]=t<128?t<<1:t<<1^283;for(var r=[],i=[],c=[[],[],[],[]],n=[[],[],[],[]],h=0,a=0,o=0;o<256;++o){var s=a^a<<1^a<<2^a<<3^a<<4;s=s>>>8^255&s^99,r[h]=s,i[s]=h;var p=e[h],u=e[p],f=e[u],l=257*e[s]^16843008*s;c[0][h]=l<<24|l>>>8,c[1][h]=l<<16|l>>>16,c[2][h]=l<<8|l>>>24,c[3][h]=l,l=16843009*f^65537*u^257*p^16843008*h,n[0][s]=l<<24|l>>>8,n[1][s]=l<<16|l>>>16,n[2][s]=l<<8|l>>>24,n[3][s]=l,0===h?h=a=1:(h=p^e[e[e[f^p]]],a^=e[e[a]])}return{SBOX:r,INV_SBOX:i,SUB_MIX:c,INV_SUB_MIX:n}}();function s(e){this._key=c(e),this._reset()}s.blockSize=16,s.keySize=32,s.prototype.blockSize=s.blockSize,s.prototype.keySize=s.keySize,s.prototype._reset=function(){for(var e=this._key,t=e.length,r=t+6,i=4*(r+1),c=[],n=0;n<t;n++)c[n]=e[n];for(n=t;n<i;n++){var h=c[n-1];n%t==0?(h=h<<8|h>>>24,h=o.SBOX[h>>>24]<<24|o.SBOX[h>>>16&255]<<16|o.SBOX[h>>>8&255]<<8|o.SBOX[255&h],h^=a[n/t|0]<<24):t>6&&n%t==4&&(h=o.SBOX[h>>>24]<<24|o.SBOX[h>>>16&255]<<16|o.SBOX[h>>>8&255]<<8|o.SBOX[255&h]),c[n]=c[n-t]^h}for(var s=[],p=0;p<i;p++){var u=i-p,f=c[u-(p%4?0:4)];s[p]=p<4||u<=4?f:o.INV_SUB_MIX[0][o.SBOX[f>>>24]]^o.INV_SUB_MIX[1][o.SBOX[f>>>16&255]]^o.INV_SUB_MIX[2][o.SBOX[f>>>8&255]]^o.INV_SUB_MIX[3][o.SBOX[255&f]]}this._nRounds=r,this._keySchedule=c,this._invKeySchedule=s},s.prototype.encryptBlockRaw=function(e){return h(e=c(e),this._keySchedule,o.SUB_MIX,o.SBOX,this._nRounds)},s.prototype.encryptBlock=function(e){var t=this.encryptBlockRaw(e),r=i.allocUnsafe(16);return r.writeUInt32BE(t[0],0),r.writeUInt32BE(t[1],4),r.writeUInt32BE(t[2],8),r.writeUInt32BE(t[3],12),r},s.prototype.decryptBlock=function(e){var t=(e=c(e))[1];e[1]=e[3],e[3]=t;var r=h(e,this._invKeySchedule,o.INV_SUB_MIX,o.INV_SBOX,this._nRounds),n=i.allocUnsafe(16);return n.writeUInt32BE(r[0],0),n.writeUInt32BE(r[3],4),n.writeUInt32BE(r[2],8),n.writeUInt32BE(r[1],12),n},s.prototype.scrub=function(){n(this._keySchedule),n(this._invKeySchedule),n(this._key)},e.exports.AES=s},P2KE:function(e,t,r){var i=r(\"hwdV\").Buffer,c=i.alloc(16,0);function n(e){var t=i.allocUnsafe(16);return t.writeUInt32BE(e[0]>>>0,0),t.writeUInt32BE(e[1]>>>0,4),t.writeUInt32BE(e[2]>>>0,8),t.writeUInt32BE(e[3]>>>0,12),t}function h(e){this.h=e,this.state=i.alloc(16,0),this.cache=i.allocUnsafe(0)}h.prototype.ghash=function(e){for(var t=-1;++t<e.length;)this.state[t]^=e[t];this._multiply()},h.prototype._multiply=function(){for(var e,t,r,i=[(e=this.h).readUInt32BE(0),e.readUInt32BE(4),e.readUInt32BE(8),e.readUInt32BE(12)],c=[0,0,0,0],h=-1;++h<128;){for(0!=(this.state[~~(h/8)]&1<<7-h%8)&&(c[0]^=i[0],c[1]^=i[1],c[2]^=i[2],c[3]^=i[3]),r=0!=(1&i[3]),t=3;t>0;t--)i[t]=i[t]>>>1|(1&i[t-1])<<31;i[0]=i[0]>>>1,r&&(i[0]=i[0]^225<<24)}this.state=n(c)},h.prototype.update=function(e){var t;for(this.cache=i.concat([this.cache,e]);this.cache.length>=16;)t=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(t)},h.prototype.final=function(e,t){return this.cache.length&&this.ghash(i.concat([this.cache,c],16)),this.ghash(n([0,e,0,t])),this.state},e.exports=h},QihY:function(e,t,r){var i=r(\"gvAe\"),c=r(\"hwdV\").Buffer,n=r(\"usKN\"),h=r(\"CfXC\"),a=r(\"ZDAU\"),o=r(\"OfWw\"),s=r(\"roQf\");function p(e,t,r){a.call(this),this._cache=new u,this._last=void 0,this._cipher=new o.AES(t),this._prev=c.from(r),this._mode=e,this._autopadding=!0}function u(){this.cache=c.allocUnsafe(0)}function f(e,t,r){var a=n[e.toLowerCase()];if(!a)throw new TypeError(\"invalid suite type\");if(\"string\"==typeof r&&(r=c.from(r)),\"GCM\"!==a.mode&&r.length!==a.iv)throw new TypeError(\"invalid iv length \"+r.length);if(\"string\"==typeof t&&(t=c.from(t)),t.length!==a.key/8)throw new TypeError(\"invalid key length \"+t.length);return\"stream\"===a.type?new h(a.module,t,r,!0):\"auth\"===a.type?new i(a.module,t,r,!0):new p(a.module,t,r)}r(\"P7XM\")(p,a),p.prototype._update=function(e){var t,r;this._cache.add(e);for(var i=[];t=this._cache.get(this._autopadding);)r=this._mode.decrypt(this,t),i.push(r);return c.concat(i)},p.prototype._final=function(){var e=this._cache.flush();if(this._autopadding)return function(e){var t=e[15];if(t<1||t>16)throw new Error(\"unable to decrypt data\");var r=-1;for(;++r<t;)if(e[r+(16-t)]!==t)throw new Error(\"unable to decrypt data\");if(16===t)return;return e.slice(0,16-t)}(this._mode.decrypt(this,e));if(e)throw new Error(\"data not multiple of block length\")},p.prototype.setAutoPadding=function(e){return this._autopadding=!!e,this},u.prototype.add=function(e){this.cache=c.concat([this.cache,e])},u.prototype.get=function(e){var t;if(e){if(this.cache.length>16)return t=this.cache.slice(0,16),this.cache=this.cache.slice(16),t}else if(this.cache.length>=16)return t=this.cache.slice(0,16),this.cache=this.cache.slice(16),t;return null},u.prototype.flush=function(){if(this.cache.length)return this.cache},t.createDecipher=function(e,t){var r=n[e.toLowerCase()];if(!r)throw new TypeError(\"invalid suite type\");var i=s(t,!1,r.key,r.iv);return f(e,i.key,i.iv)},t.createDecipheriv=f},UWVS:function(e,t,r){(function(e){var i=r(\"jIre\");function c(e){return e._prev=e._cipher.encryptBlock(e._prev),e._prev}t.encrypt=function(t,r){for(;t._cache.length<r.length;)t._cache=e.concat([t._cache,c(t)]);var n=t._cache.slice(0,r.length);return t._cache=t._cache.slice(r.length),i(r,n)}}).call(this,r(\"tjlA\").Buffer)},Ujlg:function(e,t,r){var i=r(\"hwdV\").Buffer;function c(e,t,r){for(var i,c,h=-1,a=0;++h<8;)i=t&1<<7-h?128:0,a+=(128&(c=e._cipher.encryptBlock(e._prev)[0]^i))>>h%8,e._prev=n(e._prev,r?i:c);return a}function n(e,t){var r=e.length,c=-1,n=i.allocUnsafe(e.length);for(e=i.concat([e,i.from([t])]);++c<r;)n[c]=e[c]<<1|e[c+1]>>7;return n}t.encrypt=function(e,t,r){for(var n=t.length,h=i.allocUnsafe(n),a=-1;++a<n;)h[a]=c(e,t[a],r);return h}},YskG:function(e,t,r){var i=r(\"hwdV\").Buffer;function c(e,t,r){var c=e._cipher.encryptBlock(e._prev)[0]^t;return e._prev=i.concat([e._prev.slice(1),i.from([r?t:c])]),c}t.encrypt=function(e,t,r){for(var n=t.length,h=i.allocUnsafe(n),a=-1;++a<n;)h[a]=c(e,t[a],r);return h}},at63:function(e,t,r){var i=r(\"jIre\"),c=r(\"hwdV\").Buffer,n=r(\"vZ2G\");function h(e){var t=e._cipher.encryptBlockRaw(e._prev);return n(e._prev),t}t.encrypt=function(e,t){var r=Math.ceil(t.length/16),n=e._cache.length;e._cache=c.concat([e._cache,c.allocUnsafe(16*r)]);for(var a=0;a<r;a++){var o=h(e),s=n+16*a;e._cache.writeUInt32BE(o[0],s+0),e._cache.writeUInt32BE(o[1],s+4),e._cache.writeUInt32BE(o[2],s+8),e._cache.writeUInt32BE(o[3],s+12)}var p=e._cache.slice(0,t.length);return e._cache=e._cache.slice(t.length),i(t,p)}},gvAe:function(e,t,r){var i=r(\"OfWw\"),c=r(\"hwdV\").Buffer,n=r(\"ZDAU\"),h=r(\"P7XM\"),a=r(\"P2KE\"),o=r(\"jIre\"),s=r(\"vZ2G\");function p(e,t,r,h){n.call(this);var o=c.alloc(4,0);this._cipher=new i.AES(t);var p=this._cipher.encryptBlock(o);this._ghash=new a(p),r=function(e,t,r){if(12===t.length)return e._finID=c.concat([t,c.from([0,0,0,1])]),c.concat([t,c.from([0,0,0,2])]);var i=new a(r),n=t.length,h=n%16;i.update(t),h&&(h=16-h,i.update(c.alloc(h,0))),i.update(c.alloc(8,0));var o=8*n,p=c.alloc(8);p.writeUIntBE(o,0,8),i.update(p),e._finID=i.state;var u=c.from(e._finID);return s(u),u}(this,r,p),this._prev=c.from(r),this._cache=c.allocUnsafe(0),this._secCache=c.allocUnsafe(0),this._decrypt=h,this._alen=0,this._len=0,this._mode=e,this._authTag=null,this._called=!1}h(p,n),p.prototype._update=function(e){if(!this._called&&this._alen){var t=16-this._alen%16;t<16&&(t=c.alloc(t,0),this._ghash.update(t))}this._called=!0;var r=this._mode.encrypt(this,e);return this._decrypt?this._ghash.update(e):this._ghash.update(r),this._len+=e.length,r},p.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error(\"Unsupported state or unable to authenticate data\");var e=o(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(e,t){var r=0;e.length!==t.length&&r++;for(var i=Math.min(e.length,t.length),c=0;c<i;++c)r+=e[c]^t[c];return r}(e,this._authTag))throw new Error(\"Unsupported state or unable to authenticate data\");this._authTag=e,this._cipher.scrub()},p.prototype.getAuthTag=function(){if(this._decrypt||!c.isBuffer(this._authTag))throw new Error(\"Attempting to get auth tag in unsupported state\");return this._authTag},p.prototype.setAuthTag=function(e){if(!this._decrypt)throw new Error(\"Attempting to set auth tag in unsupported state\");this._authTag=e},p.prototype.setAAD=function(e){if(this._called)throw new Error(\"Attempting to set AAD in unsupported state\");this._ghash.update(e),this._alen+=e.length},e.exports=p},iUdu:function(e,t,r){var i=r(\"usKN\"),c=r(\"gvAe\"),n=r(\"hwdV\").Buffer,h=r(\"CfXC\"),a=r(\"ZDAU\"),o=r(\"OfWw\"),s=r(\"roQf\");function p(e,t,r){a.call(this),this._cache=new f,this._cipher=new o.AES(t),this._prev=n.from(r),this._mode=e,this._autopadding=!0}r(\"P7XM\")(p,a),p.prototype._update=function(e){var t,r;this._cache.add(e);for(var i=[];t=this._cache.get();)r=this._mode.encrypt(this,t),i.push(r);return n.concat(i)};var u=n.alloc(16,16);function f(){this.cache=n.allocUnsafe(0)}function l(e,t,r){var a=i[e.toLowerCase()];if(!a)throw new TypeError(\"invalid suite type\");if(\"string\"==typeof t&&(t=n.from(t)),t.length!==a.key/8)throw new TypeError(\"invalid key length \"+t.length);if(\"string\"==typeof r&&(r=n.from(r)),\"GCM\"!==a.mode&&r.length!==a.iv)throw new TypeError(\"invalid iv length \"+r.length);return\"stream\"===a.type?new h(a.module,t,r):\"auth\"===a.type?new c(a.module,t,r):new p(a.module,t,r)}p.prototype._final=function(){var e=this._cache.flush();if(this._autopadding)return e=this._mode.encrypt(this,e),this._cipher.scrub(),e;if(!e.equals(u))throw this._cipher.scrub(),new Error(\"data not multiple of block length\")},p.prototype.setAutoPadding=function(e){return this._autopadding=!!e,this},f.prototype.add=function(e){this.cache=n.concat([this.cache,e])},f.prototype.get=function(){if(this.cache.length>15){var e=this.cache.slice(0,16);return this.cache=this.cache.slice(16),e}return null},f.prototype.flush=function(){for(var e=16-this.cache.length,t=n.allocUnsafe(e),r=-1;++r<e;)t.writeUInt8(e,r);return n.concat([this.cache,t])},t.createCipheriv=l,t.createCipher=function(e,t){var r=i[e.toLowerCase()];if(!r)throw new TypeError(\"invalid suite type\");var c=s(t,!1,r.key,r.iv);return l(e,c.key,c.iv)}},usKN:function(e,t,r){var i={ECB:r(\"AUX7\"),CBC:r(\"wRn4\"),CFB:r(\"NQVK\"),CFB8:r(\"YskG\"),CFB1:r(\"Ujlg\"),OFB:r(\"UWVS\"),CTR:r(\"at63\"),GCM:r(\"at63\")},c=r(\"6F8h\");for(var n in c)c[n].module=i[c[n].mode];e.exports=c},vZ2G:function(e,t){e.exports=function(e){for(var t,r=e.length;r--;){if(255!==(t=e.readUInt8(r))){t++,e.writeUInt8(t,r);break}e.writeUInt8(0,r)}}},wRn4:function(e,t,r){var i=r(\"jIre\");t.encrypt=function(e,t){var r=i(t,e._prev);return e._prev=e._cipher.encryptBlock(r),e._prev},t.decrypt=function(e,t){var r=e._prev;e._prev=t;var c=e._cipher.decryptBlock(t);return i(c,r)}}}]);","extractedComments":[]}