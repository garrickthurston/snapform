{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\browserify-cipher\\\\browser.js\"],\"names\":[\"DES\",\"__webpack_require__\",\"aes\",\"aesModes\",\"desModes\",\"ebtk\",\"createCipheriv\",\"suite\",\"key\",\"iv\",\"toLowerCase\",\"mode\",\"TypeError\",\"createDecipheriv\",\"decrypt\",\"exports\",\"createCipher\",\"Cipher\",\"password\",\"keyLen\",\"ivLen\",\"keys\",\"Cipheriv\",\"createDecipher\",\"Decipher\",\"Decipheriv\",\"listCiphers\",\"getCiphers\",\"Object\",\"concat\"],\"mappings\":\"+EAAA,IAAAA,EAAUC,EAAQ,QAClBC,EAAUD,EAAQ,QAClBE,EAAeF,EAAQ,QACvBG,EAAeH,EAAQ,QACvBI,EAAWJ,EAAQ,QAsCnB,SAAAK,EAAAC,EAAAC,EAAAC,GAEA,GADAF,EAAAA,EAAAG,cACAP,EAAAI,GAAA,OAAAL,EAAAI,eAAAC,EAAAC,EAAAC,GACA,GAAAL,EAAAG,GAAA,OAAA,IAAAP,EAAA,CAAuCQ,IAAAA,EAAAC,GAAAA,EAAAE,KAAAJ,IAEvC,MAAA,IAAAK,UAAA,sBAGA,SAAAC,EAAAN,EAAAC,EAAAC,GAEA,GADAF,EAAAA,EAAAG,cACAP,EAAAI,GAAA,OAAAL,EAAAW,iBAAAN,EAAAC,EAAAC,GACA,GAAAL,EAAAG,GAAA,OAAA,IAAAP,EAAA,CAAuCQ,IAAAA,EAAAC,GAAAA,EAAAE,KAAAJ,EAAAO,SAAA,IAEvC,MAAA,IAAAF,UAAA,sBAOAG,EAAAC,aAAAD,EAAAE,OAxDA,SAAAV,EAAAW,GAGA,IAAAC,EAAAC,EACA,GAHAb,EAAAA,EAAAG,cAGAP,EAAAI,GACAY,EAAAhB,EAAAI,GAAAC,IACAY,EAAAjB,EAAAI,GAAAE,OACG,CAAA,IAAAL,EAAAG,GAIH,MAAA,IAAAK,UAAA,sBAHAO,EAAA,EAAAf,EAAAG,GAAAC,IACAY,EAAAhB,EAAAG,GAAAE,GAKA,IAAAY,EAAAhB,EAAAa,GAAA,EAAAC,EAAAC,GACA,OAAAd,EAAAC,EAAAc,EAAAb,IAAAa,EAAAZ,KA0CAM,EAAAT,eAAAS,EAAAO,SAAAhB,EACAS,EAAAQ,eAAAR,EAAAS,SAxCA,SAAAjB,EAAAW,GAGA,IAAAC,EAAAC,EACA,GAHAb,EAAAA,EAAAG,cAGAP,EAAAI,GACAY,EAAAhB,EAAAI,GAAAC,IACAY,EAAAjB,EAAAI,GAAAE,OACG,CAAA,IAAAL,EAAAG,GAIH,MAAA,IAAAK,UAAA,sBAHAO,EAAA,EAAAf,EAAAG,GAAAC,IACAY,EAAAhB,EAAAG,GAAAE,GAKA,IAAAY,EAAAhB,EAAAa,GAAA,EAAAC,EAAAC,GACA,OAAAP,EAAAN,EAAAc,EAAAb,IAAAa,EAAAZ,KA0BAM,EAAAF,iBAAAE,EAAAU,WAAAZ,EACAE,EAAAW,YAAAX,EAAAY,WARA,WACA,OAAAC,OAAAP,KAAAjB,GAAAyB,OAAA3B,EAAAyB\",\"sourcesContent\":[\"var DES = require('browserify-des')\\nvar aes = require('browserify-aes/browser')\\nvar aesModes = require('browserify-aes/modes')\\nvar desModes = require('browserify-des/modes')\\nvar ebtk = require('evp_bytestokey')\\n\\nfunction createCipher (suite, password) {\\n  suite = suite.toLowerCase()\\n\\n  var keyLen, ivLen\\n  if (aesModes[suite]) {\\n    keyLen = aesModes[suite].key\\n    ivLen = aesModes[suite].iv\\n  } else if (desModes[suite]) {\\n    keyLen = desModes[suite].key * 8\\n    ivLen = desModes[suite].iv\\n  } else {\\n    throw new TypeError('invalid suite type')\\n  }\\n\\n  var keys = ebtk(password, false, keyLen, ivLen)\\n  return createCipheriv(suite, keys.key, keys.iv)\\n}\\n\\nfunction createDecipher (suite, password) {\\n  suite = suite.toLowerCase()\\n\\n  var keyLen, ivLen\\n  if (aesModes[suite]) {\\n    keyLen = aesModes[suite].key\\n    ivLen = aesModes[suite].iv\\n  } else if (desModes[suite]) {\\n    keyLen = desModes[suite].key * 8\\n    ivLen = desModes[suite].iv\\n  } else {\\n    throw new TypeError('invalid suite type')\\n  }\\n\\n  var keys = ebtk(password, false, keyLen, ivLen)\\n  return createDecipheriv(suite, keys.key, keys.iv)\\n}\\n\\nfunction createCipheriv (suite, key, iv) {\\n  suite = suite.toLowerCase()\\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\\n\\n  throw new TypeError('invalid suite type')\\n}\\n\\nfunction createDecipheriv (suite, key, iv) {\\n  suite = suite.toLowerCase()\\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\\n\\n  throw new TypeError('invalid suite type')\\n}\\n\\nfunction getCiphers () {\\n  return Object.keys(desModes).concat(aes.getCiphers())\\n}\\n\\nexports.createCipher = exports.Cipher = createCipher\\nexports.createCipheriv = exports.Cipheriv = createCipheriv\\nexports.createDecipher = exports.Decipher = createDecipher\\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\\nexports.listCiphers = exports.getCiphers = getCiphers\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{lWpZ:function(e,r,i){var t=i(\"Hjy1\"),n=i(\"/ab2\"),o=i(\"usKN\"),p=i(\"C+gy\"),a=i(\"roQf\");function c(e,r,i){if(e=e.toLowerCase(),o[e])return n.createCipheriv(e,r,i);if(p[e])return new t({key:r,iv:i,mode:e});throw new TypeError(\"invalid suite type\")}function v(e,r,i){if(e=e.toLowerCase(),o[e])return n.createDecipheriv(e,r,i);if(p[e])return new t({key:r,iv:i,mode:e,decrypt:!0});throw new TypeError(\"invalid suite type\")}r.createCipher=r.Cipher=function(e,r){var i,t;if(e=e.toLowerCase(),o[e])i=o[e].key,t=o[e].iv;else{if(!p[e])throw new TypeError(\"invalid suite type\");i=8*p[e].key,t=p[e].iv}var n=a(r,!1,i,t);return c(e,n.key,n.iv)},r.createCipheriv=r.Cipheriv=c,r.createDecipher=r.Decipher=function(e,r){var i,t;if(e=e.toLowerCase(),o[e])i=o[e].key,t=o[e].iv;else{if(!p[e])throw new TypeError(\"invalid suite type\");i=8*p[e].key,t=p[e].iv}var n=a(r,!1,i,t);return v(e,n.key,n.iv)},r.createDecipheriv=r.Decipheriv=v,r.listCiphers=r.getCiphers=function(){return Object.keys(p).concat(n.getCiphers())}}}]);","extractedComments":[]}