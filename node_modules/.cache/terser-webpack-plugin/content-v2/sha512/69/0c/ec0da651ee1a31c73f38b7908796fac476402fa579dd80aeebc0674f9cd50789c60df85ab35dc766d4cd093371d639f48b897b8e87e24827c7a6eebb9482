{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\hmac-drbg\\\\lib\\\\hmac-drbg.js\"],\"names\":[\"hash\",\"__webpack_require__\",\"utils\",\"assert\",\"HmacDRBG\",\"options\",\"this\",\"predResist\",\"outLen\",\"outSize\",\"minEntropy\",\"hmacStrength\",\"_reseed\",\"reseedInterval\",\"K\",\"V\",\"entropy\",\"toArray\",\"entropyEnc\",\"nonce\",\"nonceEnc\",\"pers\",\"persEnc\",\"length\",\"_init\",\"module\",\"exports\",\"prototype\",\"seed\",\"concat\",\"Array\",\"i\",\"_update\",\"_hmac\",\"hmac\",\"kmac\",\"update\",\"digest\",\"reseed\",\"add\",\"addEnc\",\"generate\",\"len\",\"enc\",\"Error\",\"temp\",\"res\",\"slice\",\"encode\"],\"mappings\":\"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\",\"sourcesContent\":[\"'use strict';\\n\\nvar hash = require('hash.js');\\nvar utils = require('minimalistic-crypto-utils');\\nvar assert = require('minimalistic-assert');\\n\\nfunction HmacDRBG(options) {\\n  if (!(this instanceof HmacDRBG))\\n    return new HmacDRBG(options);\\n  this.hash = options.hash;\\n  this.predResist = !!options.predResist;\\n\\n  this.outLen = this.hash.outSize;\\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\\n\\n  this._reseed = null;\\n  this.reseedInterval = null;\\n  this.K = null;\\n  this.V = null;\\n\\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\\n  assert(entropy.length >= (this.minEntropy / 8),\\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\\n  this._init(entropy, nonce, pers);\\n}\\nmodule.exports = HmacDRBG;\\n\\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\\n  var seed = entropy.concat(nonce).concat(pers);\\n\\n  this.K = new Array(this.outLen / 8);\\n  this.V = new Array(this.outLen / 8);\\n  for (var i = 0; i < this.V.length; i++) {\\n    this.K[i] = 0x00;\\n    this.V[i] = 0x01;\\n  }\\n\\n  this._update(seed);\\n  this._reseed = 1;\\n  this.reseedInterval = 0x1000000000000;  // 2^48\\n};\\n\\nHmacDRBG.prototype._hmac = function hmac() {\\n  return new hash.hmac(this.hash, this.K);\\n};\\n\\nHmacDRBG.prototype._update = function update(seed) {\\n  var kmac = this._hmac()\\n                 .update(this.V)\\n                 .update([ 0x00 ]);\\n  if (seed)\\n    kmac = kmac.update(seed);\\n  this.K = kmac.digest();\\n  this.V = this._hmac().update(this.V).digest();\\n  if (!seed)\\n    return;\\n\\n  this.K = this._hmac()\\n               .update(this.V)\\n               .update([ 0x01 ])\\n               .update(seed)\\n               .digest();\\n  this.V = this._hmac().update(this.V).digest();\\n};\\n\\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\\n  // Optional entropy enc\\n  if (typeof entropyEnc !== 'string') {\\n    addEnc = add;\\n    add = entropyEnc;\\n    entropyEnc = null;\\n  }\\n\\n  entropy = utils.toArray(entropy, entropyEnc);\\n  add = utils.toArray(add, addEnc);\\n\\n  assert(entropy.length >= (this.minEntropy / 8),\\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\\n\\n  this._update(entropy.concat(add || []));\\n  this._reseed = 1;\\n};\\n\\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\\n  if (this._reseed > this.reseedInterval)\\n    throw new Error('Reseed is required');\\n\\n  // Optional encoding\\n  if (typeof enc !== 'string') {\\n    addEnc = add;\\n    add = enc;\\n    enc = null;\\n  }\\n\\n  // Optional additional data\\n  if (add) {\\n    add = utils.toArray(add, addEnc || 'hex');\\n    this._update(add);\\n  }\\n\\n  var temp = [];\\n  while (temp.length < len) {\\n    this.V = this._hmac().update(this.V).digest();\\n    temp = temp.concat(this.V);\\n  }\\n\\n  var res = temp.slice(0, len);\\n  this._update(add);\\n  this._reseed++;\\n  return utils.encode(res, enc);\\n};\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{\"aqI/\":function(t,e,i){\"use strict\";var s=i(\"fZJM\"),h=i(\"dlgc\"),n=i(\"2j6C\");function r(t){if(!(this instanceof r))return new r(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=h.toArray(t.entropy,t.entropyEnc||\"hex\"),i=h.toArray(t.nonce,t.nonceEnc||\"hex\"),s=h.toArray(t.pers,t.persEnc||\"hex\");n(e.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\"),this._init(e,i,s)}t.exports=r,r.prototype._init=function(t,e,i){var s=t.concat(e).concat(i);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var h=0;h<this.V.length;h++)this.K[h]=0,this.V[h]=1;this._update(s),this._reseed=1,this.reseedInterval=281474976710656},r.prototype._hmac=function(){return new s.hmac(this.hash,this.K)},r.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},r.prototype.reseed=function(t,e,i,s){\"string\"!=typeof e&&(s=i,i=e,e=null),t=h.toArray(t,e),i=h.toArray(i,s),n(t.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\"),this._update(t.concat(i||[])),this._reseed=1},r.prototype.generate=function(t,e,i,s){if(this._reseed>this.reseedInterval)throw new Error(\"Reseed is required\");\"string\"!=typeof e&&(s=i,i=e,e=null),i&&(i=h.toArray(i,s||\"hex\"),this._update(i));for(var n=[];n.length<t;)this.V=this._hmac().update(this.V).digest(),n=n.concat(this.V);var r=n.slice(0,t);return this._update(i),this._reseed++,h.encode(r,e)}}}]);","extractedComments":[]}