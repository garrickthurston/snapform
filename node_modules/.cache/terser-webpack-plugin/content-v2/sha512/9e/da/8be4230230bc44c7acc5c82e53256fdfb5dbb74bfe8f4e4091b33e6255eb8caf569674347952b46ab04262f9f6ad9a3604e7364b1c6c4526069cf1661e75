{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\resolve-pathname\\\\index.js\"],\"names\":[\"isAbsolute\",\"pathname\",\"charAt\",\"spliceOne\",\"list\",\"index\",\"i\",\"k\",\"n\",\"length\",\"pop\",\"__webpack_exports__\",\"to\",\"from\",\"arguments\",\"undefined\",\"toParts\",\"split\",\"fromParts\",\"isToAbs\",\"isFromAbs\",\"mustEndAbs\",\"concat\",\"hasTrailingSlash\",\"last\",\"up\",\"part\",\"unshift\",\"result\",\"join\",\"substr\"],\"mappings\":\"4FAAA,SAAAA,EAAAC,GACA,MAAA,MAAAA,EAAAC,OAAA,GAIA,SAAAC,EAAAC,EAAAC,GACA,IAAA,IAAAC,EAAAD,EAAAE,EAAAD,EAAA,EAAAE,EAAAJ,EAAAK,OAAiDF,EAAAC,EAAOF,GAAA,EAAAC,GAAA,EACxDH,EAAAE,GAAAF,EAAAG,GAGAH,EAAAM,MA2DeC,EAAA,EAvDf,SAAAC,GACA,IAAAC,EAAAC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAA,GAEAE,EAAAJ,GAAAA,EAAAK,MAAA,MAAA,GACAC,EAAAL,GAAAA,EAAAI,MAAA,MAAA,GAEAE,EAAAP,GAAAZ,EAAAY,GACAQ,EAAAP,GAAAb,EAAAa,GACAQ,EAAAF,GAAAC,EAWA,GATAR,GAAAZ,EAAAY,GAEAM,EAAAF,EACGA,EAAAP,SAEHS,EAAAR,MACAQ,EAAAA,EAAAI,OAAAN,KAGAE,EAAAT,OAAA,MAAA,IAEA,IAAAc,OAAA,EACA,GAAAL,EAAAT,OAAA,CACA,IAAAe,EAAAN,EAAAA,EAAAT,OAAA,GACAc,EAAA,MAAAC,GAAA,OAAAA,GAAA,KAAAA,OAEAD,GAAA,EAIA,IADA,IAAAE,EAAA,EACAnB,EAAAY,EAAAT,OAAgCH,GAAA,EAAQA,IAAA,CACxC,IAAAoB,EAAAR,EAAAZ,GAEA,MAAAoB,EACAvB,EAAAe,EAAAZ,GACK,OAAAoB,GACLvB,EAAAe,EAAAZ,GACAmB,KACKA,IACLtB,EAAAe,EAAAZ,GACAmB,KAIA,IAAAJ,EAAA,KAAyBI,IAAMA,EAC/BP,EAAAS,QAAA,OACGN,GAAA,KAAAH,EAAA,IAAAA,EAAA,IAAAlB,EAAAkB,EAAA,KAAAA,EAAAS,QAAA,IAEH,IAAAC,EAAAV,EAAAW,KAAA,KAIA,OAFAN,GAAA,MAAAK,EAAAE,QAAA,KAAAF,GAAA,KAEAA\",\"sourcesContent\":[\"function isAbsolute(pathname) {\\n  return pathname.charAt(0) === '/';\\n}\\n\\n// About 1.5x faster than the two-arg version of Array#splice()\\nfunction spliceOne(list, index) {\\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\\n    list[i] = list[k];\\n  }\\n\\n  list.pop();\\n}\\n\\n// This implementation is based heavily on node's url.parse\\nfunction resolvePathname(to) {\\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\\n\\n  var toParts = to && to.split('/') || [];\\n  var fromParts = from && from.split('/') || [];\\n\\n  var isToAbs = to && isAbsolute(to);\\n  var isFromAbs = from && isAbsolute(from);\\n  var mustEndAbs = isToAbs || isFromAbs;\\n\\n  if (to && isAbsolute(to)) {\\n    // to is absolute\\n    fromParts = toParts;\\n  } else if (toParts.length) {\\n    // to is relative, drop the filename\\n    fromParts.pop();\\n    fromParts = fromParts.concat(toParts);\\n  }\\n\\n  if (!fromParts.length) return '/';\\n\\n  var hasTrailingSlash = void 0;\\n  if (fromParts.length) {\\n    var last = fromParts[fromParts.length - 1];\\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\\n  } else {\\n    hasTrailingSlash = false;\\n  }\\n\\n  var up = 0;\\n  for (var i = fromParts.length; i >= 0; i--) {\\n    var part = fromParts[i];\\n\\n    if (part === '.') {\\n      spliceOne(fromParts, i);\\n    } else if (part === '..') {\\n      spliceOne(fromParts, i);\\n      up++;\\n    } else if (up) {\\n      spliceOne(fromParts, i);\\n      up--;\\n    }\\n  }\\n\\n  if (!mustEndAbs) for (; up--; up) {\\n    fromParts.unshift('..');\\n  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\\n\\n  var result = fromParts.join('/');\\n\\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\\n\\n  return result;\\n}\\n\\nexport default resolvePathname;\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{Rh1G:function(n,t,r){\"use strict\";function i(n){return\"/\"===n.charAt(0)}function o(n,t){for(var r=t,i=r+1,o=n.length;i<o;r+=1,i+=1)n[r]=n[i];n.pop()}t.a=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",r=n&&n.split(\"/\")||[],e=t&&t.split(\"/\")||[],a=n&&i(n),f=t&&i(t),h=a||f;if(n&&i(n)?e=r:r.length&&(e.pop(),e=e.concat(r)),!e.length)return\"/\";var s=void 0;if(e.length){var u=e[e.length-1];s=\".\"===u||\"..\"===u||\"\"===u}else s=!1;for(var p=0,c=e.length;c>=0;c--){var l=e[c];\".\"===l?o(e,c):\"..\"===l?(o(e,c),p++):p&&(o(e,c),p--)}if(!h)for(;p--;p)e.unshift(\"..\");!h||\"\"===e[0]||e[0]&&i(e[0])||e.unshift(\"\");var v=e.join(\"/\");return s&&\"/\"!==v.substr(-1)&&(v+=\"/\"),v}}}]);","extractedComments":[]}