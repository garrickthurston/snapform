{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\pbkdf2\\\\lib\\\\sync-browser.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\pbkdf2\\\\lib\\\\async.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\pbkdf2\\\\lib\\\\precondition.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\pbkdf2\\\\lib\\\\default-encoding.js\",\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\pbkdf2\\\\browser.js\"],\"names\":[\"md5\",\"__webpack_require__\",\"RIPEMD160\",\"sha\",\"checkParameters\",\"defaultEncoding\",\"Buffer\",\"ZEROS\",\"alloc\",\"sizes\",\"sha1\",\"sha224\",\"sha256\",\"sha384\",\"sha512\",\"rmd160\",\"ripemd160\",\"Hmac\",\"alg\",\"key\",\"saltLen\",\"hash\",\"data\",\"update\",\"digest\",\"getDigest\",\"blocksize\",\"length\",\"concat\",\"ipad\",\"allocUnsafe\",\"opad\",\"i\",\"ipad1\",\"copy\",\"this\",\"ipad2\",\"size\",\"prototype\",\"run\",\"module\",\"exports\",\"password\",\"salt\",\"iterations\",\"keylen\",\"isBuffer\",\"from\",\"hmac\",\"DK\",\"block1\",\"destPos\",\"hLen\",\"l\",\"Math\",\"ceil\",\"writeUInt32BE\",\"T\",\"U\",\"j\",\"k\",\"global\",\"process\",\"ZERO_BUF\",\"sync\",\"subtle\",\"crypto\",\"toBrowser\",\"sha-1\",\"sha-256\",\"sha-384\",\"sha-512\",\"checks\",\"browserPbkdf2\",\"algo\",\"importKey\",\"name\",\"then\",\"deriveBits\",\"res\",\"callback\",\"undefined\",\"toLowerCase\",\"Promise\",\"nextTick\",\"out\",\"e\",\"Error\",\"promise\",\"resolvePromise\",\"browser\",\"resolve\",\"prom\",\"catch\",\"checkNative\",\"resp\",\"MAX_ALLOC\",\"pow\",\"checkBuffer\",\"buf\",\"TypeError\",\"parseInt\",\"version\",\"split\",\"slice\",\"pbkdf2\",\"pbkdf2Sync\"],\"mappings\":\"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\",\"sourcesContent\":[\"var md5 = require('create-hash/md5')\\nvar RIPEMD160 = require('ripemd160')\\nvar sha = require('sha.js')\\n\\nvar checkParameters = require('./precondition')\\nvar defaultEncoding = require('./default-encoding')\\nvar Buffer = require('safe-buffer').Buffer\\nvar ZEROS = Buffer.alloc(128)\\nvar sizes = {\\n  md5: 16,\\n  sha1: 20,\\n  sha224: 28,\\n  sha256: 32,\\n  sha384: 48,\\n  sha512: 64,\\n  rmd160: 20,\\n  ripemd160: 20\\n}\\n\\nfunction Hmac (alg, key, saltLen) {\\n  var hash = getDigest(alg)\\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\\n\\n  if (key.length > blocksize) {\\n    key = hash(key)\\n  } else if (key.length < blocksize) {\\n    key = Buffer.concat([key, ZEROS], blocksize)\\n  }\\n\\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\\n  for (var i = 0; i < blocksize; i++) {\\n    ipad[i] = key[i] ^ 0x36\\n    opad[i] = key[i] ^ 0x5C\\n  }\\n\\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\\n  ipad.copy(ipad1, 0, 0, blocksize)\\n  this.ipad1 = ipad1\\n  this.ipad2 = ipad\\n  this.opad = opad\\n  this.alg = alg\\n  this.blocksize = blocksize\\n  this.hash = hash\\n  this.size = sizes[alg]\\n}\\n\\nHmac.prototype.run = function (data, ipad) {\\n  data.copy(ipad, this.blocksize)\\n  var h = this.hash(ipad)\\n  h.copy(this.opad, this.blocksize)\\n  return this.hash(this.opad)\\n}\\n\\nfunction getDigest (alg) {\\n  function shaFunc (data) {\\n    return sha(alg).update(data).digest()\\n  }\\n  function rmd160Func (data) {\\n    return new RIPEMD160().update(data).digest()\\n  }\\n\\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\\n  if (alg === 'md5') return md5\\n  return shaFunc\\n}\\n\\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\\n  checkParameters(password, salt, iterations, keylen)\\n\\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\\n\\n  digest = digest || 'sha1'\\n\\n  var hmac = new Hmac(digest, password, salt.length)\\n\\n  var DK = Buffer.allocUnsafe(keylen)\\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\\n  salt.copy(block1, 0, 0, salt.length)\\n\\n  var destPos = 0\\n  var hLen = sizes[digest]\\n  var l = Math.ceil(keylen / hLen)\\n\\n  for (var i = 1; i <= l; i++) {\\n    block1.writeUInt32BE(i, salt.length)\\n\\n    var T = hmac.run(block1, hmac.ipad1)\\n    var U = T\\n\\n    for (var j = 1; j < iterations; j++) {\\n      U = hmac.run(U, hmac.ipad2)\\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\\n    }\\n\\n    T.copy(DK, destPos)\\n    destPos += hLen\\n  }\\n\\n  return DK\\n}\\n\\nmodule.exports = pbkdf2\\n\",\"var checkParameters = require('./precondition')\\nvar defaultEncoding = require('./default-encoding')\\nvar sync = require('./sync')\\nvar Buffer = require('safe-buffer').Buffer\\n\\nvar ZERO_BUF\\nvar subtle = global.crypto && global.crypto.subtle\\nvar toBrowser = {\\n  'sha': 'SHA-1',\\n  'sha-1': 'SHA-1',\\n  'sha1': 'SHA-1',\\n  'sha256': 'SHA-256',\\n  'sha-256': 'SHA-256',\\n  'sha384': 'SHA-384',\\n  'sha-384': 'SHA-384',\\n  'sha-512': 'SHA-512',\\n  'sha512': 'SHA-512'\\n}\\nvar checks = []\\nfunction checkNative (algo) {\\n  if (global.process && !global.process.browser) {\\n    return Promise.resolve(false)\\n  }\\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\\n    return Promise.resolve(false)\\n  }\\n  if (checks[algo] !== undefined) {\\n    return checks[algo]\\n  }\\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\\n    .then(function () {\\n      return true\\n    }).catch(function () {\\n      return false\\n    })\\n  checks[algo] = prom\\n  return prom\\n}\\n\\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\\n  return subtle.importKey(\\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\\n  ).then(function (key) {\\n    return subtle.deriveBits({\\n      name: 'PBKDF2',\\n      salt: salt,\\n      iterations: iterations,\\n      hash: {\\n        name: algo\\n      }\\n    }, key, length << 3)\\n  }).then(function (res) {\\n    return Buffer.from(res)\\n  })\\n}\\n\\nfunction resolvePromise (promise, callback) {\\n  promise.then(function (out) {\\n    process.nextTick(function () {\\n      callback(null, out)\\n    })\\n  }, function (e) {\\n    process.nextTick(function () {\\n      callback(e)\\n    })\\n  })\\n}\\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\\n  if (typeof digest === 'function') {\\n    callback = digest\\n    digest = undefined\\n  }\\n\\n  digest = digest || 'sha1'\\n  var algo = toBrowser[digest.toLowerCase()]\\n\\n  if (!algo || typeof global.Promise !== 'function') {\\n    return process.nextTick(function () {\\n      var out\\n      try {\\n        out = sync(password, salt, iterations, keylen, digest)\\n      } catch (e) {\\n        return callback(e)\\n      }\\n      callback(null, out)\\n    })\\n  }\\n\\n  checkParameters(password, salt, iterations, keylen)\\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\\n\\n  resolvePromise(checkNative(algo).then(function (resp) {\\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\\n\\n    return sync(password, salt, iterations, keylen, digest)\\n  }), callback)\\n}\\n\",\"var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\\n\\nfunction checkBuffer (buf, name) {\\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\\n    throw new TypeError(name + ' must be a buffer or string')\\n  }\\n}\\n\\nmodule.exports = function (password, salt, iterations, keylen) {\\n  checkBuffer(password, 'Password')\\n  checkBuffer(salt, 'Salt')\\n\\n  if (typeof iterations !== 'number') {\\n    throw new TypeError('Iterations not a number')\\n  }\\n\\n  if (iterations < 0) {\\n    throw new TypeError('Bad iterations')\\n  }\\n\\n  if (typeof keylen !== 'number') {\\n    throw new TypeError('Key length not a number')\\n  }\\n\\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\\n    throw new TypeError('Bad key length')\\n  }\\n}\\n\",\"var defaultEncoding\\n/* istanbul ignore next */\\nif (process.browser) {\\n  defaultEncoding = 'utf-8'\\n} else {\\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\\n\\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\\n}\\nmodule.exports = defaultEncoding\\n\",\"exports.pbkdf2 = require('./lib/async')\\nexports.pbkdf2Sync = require('./lib/sync')\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{\"4Hv8\":function(n,t,r){var e=r(\"WnY+\"),o=r(\"tcrS\"),i=r(\"afKu\"),f=r(\"fSpj\"),s=r(\"n53Y\"),a=r(\"hwdV\").Buffer,u=a.alloc(128),c={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function h(n,t,r){var f=function(n){return\"rmd160\"===n||\"ripemd160\"===n?function(n){return(new o).update(n).digest()}:\"md5\"===n?e:function(t){return i(n).update(t).digest()}}(n),s=\"sha512\"===n||\"sha384\"===n?128:64;t.length>s?t=f(t):t.length<s&&(t=a.concat([t,u],s));for(var h=a.allocUnsafe(s+c[n]),p=a.allocUnsafe(s+c[n]),l=0;l<s;l++)h[l]=54^t[l],p[l]=92^t[l];var d=a.allocUnsafe(s+r+4);h.copy(d,0,0,s),this.ipad1=d,this.ipad2=h,this.opad=p,this.alg=n,this.blocksize=s,this.hash=f,this.size=c[n]}h.prototype.run=function(n,t){return n.copy(t,this.blocksize),this.hash(t).copy(this.opad,this.blocksize),this.hash(this.opad)},n.exports=function(n,t,r,e,o){f(n,t,r,e),a.isBuffer(n)||(n=a.from(n,s)),a.isBuffer(t)||(t=a.from(t,s));var i=new h(o=o||\"sha1\",n,t.length),u=a.allocUnsafe(e),p=a.allocUnsafe(t.length+4);t.copy(p,0,0,t.length);for(var l=0,d=c[o],w=Math.ceil(e/d),y=1;y<=w;y++){p.writeUInt32BE(y,t.length);for(var v=i.run(p,i.ipad1),m=v,b=1;b<r;b++){m=i.run(m,i.ipad2);for(var B=0;B<d;B++)v[B]^=m[B]}v.copy(u,l),l+=d}return u}},IG1u:function(n,t,r){(function(t,e){var o,i=r(\"fSpj\"),f=r(\"n53Y\"),s=r(\"4Hv8\"),a=r(\"hwdV\").Buffer,u=t.crypto&&t.crypto.subtle,c={sha:\"SHA-1\",\"sha-1\":\"SHA-1\",sha1:\"SHA-1\",sha256:\"SHA-256\",\"sha-256\":\"SHA-256\",sha384:\"SHA-384\",\"sha-384\":\"SHA-384\",\"sha-512\":\"SHA-512\",sha512:\"SHA-512\"},h=[];function p(n,t,r,e,o){return u.importKey(\"raw\",n,{name:\"PBKDF2\"},!1,[\"deriveBits\"]).then(function(n){return u.deriveBits({name:\"PBKDF2\",salt:t,iterations:r,hash:{name:o}},n,e<<3)}).then(function(n){return a.from(n)})}n.exports=function(n,r,l,d,w,y){\"function\"==typeof w&&(y=w,w=void 0);var v=c[(w=w||\"sha1\").toLowerCase()];if(!v||\"function\"!=typeof t.Promise)return e.nextTick(function(){var t;try{t=s(n,r,l,d,w)}catch(n){return y(n)}y(null,t)});if(i(n,r,l,d),\"function\"!=typeof y)throw new Error(\"No callback provided to pbkdf2\");a.isBuffer(n)||(n=a.from(n,f)),a.isBuffer(r)||(r=a.from(r,f)),function(n,t){n.then(function(n){e.nextTick(function(){t(null,n)})},function(n){e.nextTick(function(){t(n)})})}(function(n){if(t.process&&!t.process.browser)return Promise.resolve(!1);if(!u||!u.importKey||!u.deriveBits)return Promise.resolve(!1);if(void 0!==h[n])return h[n];var r=p(o=o||a.alloc(8),o,10,128,n).then(function(){return!0}).catch(function(){return!1});return h[n]=r,r}(v).then(function(t){return t?p(n,r,l,d,v):s(n,r,l,d,w)}),y)}}).call(this,r(\"yLpj\"),r(\"8oxB\"))},fSpj:function(n,t,r){(function(t){var r=Math.pow(2,30)-1;function e(n,r){if(\"string\"!=typeof n&&!t.isBuffer(n))throw new TypeError(r+\" must be a buffer or string\")}n.exports=function(n,t,o,i){if(e(n,\"Password\"),e(t,\"Salt\"),\"number\"!=typeof o)throw new TypeError(\"Iterations not a number\");if(o<0)throw new TypeError(\"Bad iterations\");if(\"number\"!=typeof i)throw new TypeError(\"Key length not a number\");if(i<0||i>r||i!=i)throw new TypeError(\"Bad key length\")}}).call(this,r(\"tjlA\").Buffer)},n53Y:function(n,t,r){(function(t){var r;t.browser?r=\"utf-8\":r=parseInt(t.version.split(\".\")[0].slice(1),10)>=6?\"utf-8\":\"binary\";n.exports=r}).call(this,r(\"8oxB\"))},oJl4:function(n,t,r){t.pbkdf2=r(\"IG1u\"),t.pbkdf2Sync=r(\"4Hv8\")}}]);","extractedComments":[]}