{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\hash-base\\\\index.js\"],\"names\":[\"Buffer\",\"__webpack_require__\",\"Transform\",\"HashBase\",\"blockSize\",\"call\",\"this\",\"_block\",\"allocUnsafe\",\"_blockSize\",\"_blockOffset\",\"_length\",\"_finalized\",\"inherits\",\"prototype\",\"_transform\",\"chunk\",\"encoding\",\"callback\",\"error\",\"update\",\"err\",\"_flush\",\"push\",\"digest\",\"data\",\"val\",\"prefix\",\"isBuffer\",\"TypeError\",\"throwIfNotStringOrBuffer\",\"Error\",\"from\",\"block\",\"offset\",\"length\",\"i\",\"_update\",\"j\",\"carry\",\"_digest\",\"undefined\",\"toString\",\"fill\",\"module\",\"exports\"],\"mappings\":\"8FACA,IAAAA,EAAaC,EAAQ,QAAaD,OAClCE,EAAgBD,EAAQ,QAAQC,UAShC,SAAAC,EAAAC,GACAF,EAAAG,KAAAC,MAEAA,KAAAC,OAAAP,EAAAQ,YAAAJ,GACAE,KAAAG,WAAAL,EACAE,KAAAI,aAAA,EACAJ,KAAAK,QAAA,CAAA,EAAA,EAAA,EAAA,GAEAL,KAAAM,YAAA,EAhBeX,EAAQ,OAmBvBY,CAAAV,EAAAD,GAEAC,EAAAW,UAAAC,WAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,KACA,IACAb,KAAAc,OAAAJ,EAAAC,GACG,MAAAI,GACHF,EAAAE,EAGAH,EAAAC,IAGAhB,EAAAW,UAAAQ,OAAA,SAAAJ,GACA,IAAAC,EAAA,KACA,IACAb,KAAAiB,KAAAjB,KAAAkB,UACG,MAAAH,GACHF,EAAAE,EAGAH,EAAAC,IAGAhB,EAAAW,UAAAM,OAAA,SAAAK,EAAAR,GAEA,GA3CA,SAAAS,EAAAC,GACA,IAAA3B,EAAA4B,SAAAF,IAAA,iBAAAA,EACA,MAAA,IAAAG,UAAAF,EAAA,iCAwCAG,CAAAL,EAAA,QACAnB,KAAAM,WAAA,MAAA,IAAAmB,MAAA,yBACA/B,EAAA4B,SAAAH,KAAAA,EAAAzB,EAAAgC,KAAAP,EAAAR,IAKA,IAFA,IAAAgB,EAAA3B,KAAAC,OACA2B,EAAA,EACA5B,KAAAI,aAAAe,EAAAU,OAAAD,GAAA5B,KAAAG,YAAA,CACA,IAAA,IAAA2B,EAAA9B,KAAAI,aAAmC0B,EAAA9B,KAAAG,YAAqBwB,EAAAG,KAAAX,EAAAS,KACxD5B,KAAA+B,UACA/B,KAAAI,aAAA,EAEA,KAAAwB,EAAAT,EAAAU,QAAAF,EAAA3B,KAAAI,gBAAAe,EAAAS,KAGA,IAAA,IAAAI,EAAA,EAAAC,EAAA,EAAAd,EAAAU,OAA0CI,EAAA,IAAWD,EACrDhC,KAAAK,QAAA2B,IAAAC,GACAA,EAAAjC,KAAAK,QAAA2B,GAAA,WAAA,GACA,IAAAhC,KAAAK,QAAA2B,IAAA,WAAAC,GAGA,OAAAjC,MAGAH,EAAAW,UAAAuB,QAAA,WACA,MAAA,IAAAN,MAAA,+BAGA5B,EAAAW,UAAAU,OAAA,SAAAP,GACA,GAAAX,KAAAM,WAAA,MAAA,IAAAmB,MAAA,yBACAzB,KAAAM,YAAA,EAEA,IAAAY,EAAAlB,KAAAkC,eACAC,IAAAxB,IAAAO,EAAAA,EAAAkB,SAAAzB,IAGAX,KAAAC,OAAAoC,KAAA,GACArC,KAAAI,aAAA,EACA,IAAA,IAAA0B,EAAA,EAAiBA,EAAA,IAAOA,EAAA9B,KAAAK,QAAAyB,GAAA,EAExB,OAAAZ,GAGArB,EAAAW,UAAA0B,QAAA,WACA,MAAA,IAAAT,MAAA,+BAGAa,EAAAC,QAAA1C\",\"sourcesContent\":[\"'use strict'\\nvar Buffer = require('safe-buffer').Buffer\\nvar Transform = require('stream').Transform\\nvar inherits = require('inherits')\\n\\nfunction throwIfNotStringOrBuffer (val, prefix) {\\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\\n    throw new TypeError(prefix + ' must be a string or a buffer')\\n  }\\n}\\n\\nfunction HashBase (blockSize) {\\n  Transform.call(this)\\n\\n  this._block = Buffer.allocUnsafe(blockSize)\\n  this._blockSize = blockSize\\n  this._blockOffset = 0\\n  this._length = [0, 0, 0, 0]\\n\\n  this._finalized = false\\n}\\n\\ninherits(HashBase, Transform)\\n\\nHashBase.prototype._transform = function (chunk, encoding, callback) {\\n  var error = null\\n  try {\\n    this.update(chunk, encoding)\\n  } catch (err) {\\n    error = err\\n  }\\n\\n  callback(error)\\n}\\n\\nHashBase.prototype._flush = function (callback) {\\n  var error = null\\n  try {\\n    this.push(this.digest())\\n  } catch (err) {\\n    error = err\\n  }\\n\\n  callback(error)\\n}\\n\\nHashBase.prototype.update = function (data, encoding) {\\n  throwIfNotStringOrBuffer(data, 'Data')\\n  if (this._finalized) throw new Error('Digest already called')\\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\\n\\n  // consume data\\n  var block = this._block\\n  var offset = 0\\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\\n    this._update()\\n    this._blockOffset = 0\\n  }\\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\\n\\n  // update length\\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\\n    this._length[j] += carry\\n    carry = (this._length[j] / 0x0100000000) | 0\\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\\n  }\\n\\n  return this\\n}\\n\\nHashBase.prototype._update = function () {\\n  throw new Error('_update is not implemented')\\n}\\n\\nHashBase.prototype.digest = function (encoding) {\\n  if (this._finalized) throw new Error('Digest already called')\\n  this._finalized = true\\n\\n  var digest = this._digest()\\n  if (encoding !== undefined) digest = digest.toString(encoding)\\n\\n  // reset state\\n  this._block.fill(0)\\n  this._blockOffset = 0\\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\\n\\n  return digest\\n}\\n\\nHashBase.prototype._digest = function () {\\n  throw new Error('_digest is not implemented')\\n}\\n\\nmodule.exports = HashBase\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{\"k+aG\":function(t,i,e){\"use strict\";var o=e(\"hwdV\").Buffer,r=e(\"1IWx\").Transform;function s(t){r.call(this),this._block=o.allocUnsafe(t),this._blockSize=t,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}e(\"P7XM\")(s,r),s.prototype._transform=function(t,i,e){var o=null;try{this.update(t,i)}catch(t){o=t}e(o)},s.prototype._flush=function(t){var i=null;try{this.push(this.digest())}catch(t){i=t}t(i)},s.prototype.update=function(t,i){if(function(t,i){if(!o.isBuffer(t)&&\"string\"!=typeof t)throw new TypeError(i+\" must be a string or a buffer\")}(t,\"Data\"),this._finalized)throw new Error(\"Digest already called\");o.isBuffer(t)||(t=o.from(t,i));for(var e=this._block,r=0;this._blockOffset+t.length-r>=this._blockSize;){for(var s=this._blockOffset;s<this._blockSize;)e[s++]=t[r++];this._update(),this._blockOffset=0}for(;r<t.length;)e[this._blockOffset++]=t[r++];for(var n=0,f=8*t.length;f>0;++n)this._length[n]+=f,(f=this._length[n]/4294967296|0)>0&&(this._length[n]-=4294967296*f);return this},s.prototype._update=function(){throw new Error(\"_update is not implemented\")},s.prototype.digest=function(t){if(this._finalized)throw new Error(\"Digest already called\");this._finalized=!0;var i=this._digest();void 0!==t&&(i=i.toString(t)),this._block.fill(0),this._blockOffset=0;for(var e=0;e<4;++e)this._length[e]=0;return i},s.prototype._digest=function(){throw new Error(\"_digest is not implemented\")},t.exports=s}}]);","extractedComments":[]}