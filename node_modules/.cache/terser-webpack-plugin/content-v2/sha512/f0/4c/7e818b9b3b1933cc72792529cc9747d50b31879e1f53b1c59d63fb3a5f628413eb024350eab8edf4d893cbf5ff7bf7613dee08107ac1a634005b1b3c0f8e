{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\garrick\\\\source\\\\repos\\\\snapform\\\\node_modules\\\\warning\\\\warning.js\"],\"names\":[\"console\",\"warning\",\"module\",\"exports\"],\"mappings\":\"+FAAA,SAAAA,GAgBA,IAEAC,EAAA,aA2CAC,EAAAC,QAAAF\",\"sourcesContent\":[\"/**\\n * Copyright (c) 2014-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n'use strict';\\n\\n/**\\n * Similar to invariant but only logs a warning if the condition is not met.\\n * This can be used to log issues in development environments in critical\\n * paths. Removing the logging code for production environments will keep the\\n * same logic and follow the same code paths.\\n */\\n\\nvar __DEV__ = process.env.NODE_ENV !== 'production';\\n\\nvar warning = function() {};\\n\\nif (__DEV__) {\\n  var printWarning = function printWarning(format, args) {\\n    var len = arguments.length;\\n    args = new Array(len > 1 ? len - 1 : 0);\\n    for (var key = 1; key < len; key++) {\\n      args[key - 1] = arguments[key];\\n    }\\n    var argIndex = 0;\\n    var message = 'Warning: ' +\\n      format.replace(/%s/g, function() {\\n        return args[argIndex++];\\n      });\\n    if (typeof console !== 'undefined') {\\n      console.error(message);\\n    }\\n    try {\\n      // --- Welcome to debugging React ---\\n      // This error was thrown as a convenience so that you can use this stack\\n      // to find the callsite that caused this warning to fire.\\n      throw new Error(message);\\n    } catch (x) {}\\n  }\\n\\n  warning = function(condition, format, args) {\\n    var len = arguments.length;\\n    args = new Array(len > 2 ? len - 2 : 0);\\n    for (var key = 2; key < len; key++) {\\n      args[key - 2] = arguments[key];\\n    }\\n    if (format === undefined) {\\n      throw new Error(\\n          '`warning(condition, format, ...args)` requires a warning ' +\\n          'message argument'\\n      );\\n    }\\n    if (!condition) {\\n      printWarning.apply(null, [format].concat(args));\\n    }\\n  };\\n}\\n\\nmodule.exports = warning;\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{\"2W6z\":function(n,i,o){\"use strict\";(function(i){var o=function(){};n.exports=o}).call(this,o(\"ziTh\"))}}]);","extractedComments":[]}